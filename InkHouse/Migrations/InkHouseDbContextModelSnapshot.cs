// <auto-generated />
using System;
using InkHouse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InkHouse.Migrations
{
    [DbContext(typeof(InkHouseDbContext))]
    partial class InkHouseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InkHouse.Models.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("903fb3fc-90c8-4353-a731-6911170cb807"),
                            Name = "Франция"
                        },
                        new
                        {
                            CountryId = new Guid("16e52979-6a2c-4498-b60e-35a9d7c68a30"),
                            Name = "Германия"
                        },
                        new
                        {
                            CountryId = new Guid("28b6a49f-4cb9-41ae-a2be-7a54112a191a"),
                            Name = "Англия"
                        });
                });

            modelBuilder.Entity("InkHouse.Models.Painter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Painters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5676a486-0bf7-49a7-9be0-f9c482c2f591"),
                            Birthdate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("903fb3fc-90c8-4353-a731-6911170cb807"),
                            Name = "Марсель",
                            Surname = "Руссо"
                        },
                        new
                        {
                            Id = new Guid("79c30055-dfcc-45f6-85a5-174cf2da2146"),
                            Birthdate = new DateTime(1980, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("16e52979-6a2c-4498-b60e-35a9d7c68a30"),
                            Name = "Анри",
                            Surname = "Селин"
                        },
                        new
                        {
                            Id = new Guid("bb57c88c-b1e3-43a4-825a-ac289e85cfb4"),
                            Birthdate = new DateTime(1990, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = new Guid("28b6a49f-4cb9-41ae-a2be-7a54112a191a"),
                            Name = "Франсуа",
                            Surname = "Дюпон"
                        });
                });

            modelBuilder.Entity("InkHouse.Models.Painting", b =>
                {
                    b.Property<Guid>("PaintingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PainterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaintingId");

                    b.HasIndex("PainterId");

                    b.ToTable("Paintings");

                    b.HasData(
                        new
                        {
                            PaintingId = new Guid("f8a8c851-2cbc-48c2-a439-bdc494d6329a"),
                            Image = "Assets/PaintingImg/f8a8c851-2cbc-48c2-a439-bdc494d6329a.jpg",
                            Name = "Охота Амура",
                            PainterId = new Guid("5676a486-0bf7-49a7-9be0-f9c482c2f591"),
                            Price = 14500.0,
                            Title = "Холст, масло (50х80)"
                        },
                        new
                        {
                            PaintingId = new Guid("27bad295-e53c-4060-8fb5-57681f1e4354"),
                            Image = "Assets/PaintingImg/27bad295-e53c-4060-8fb5-57681f1e4354.jpg",
                            Name = "Дама с собачкой",
                            PainterId = new Guid("79c30055-dfcc-45f6-85a5-174cf2da2146"),
                            Price = 16500.0,
                            Title = "Акрил, бумага (50х80)"
                        },
                        new
                        {
                            PaintingId = new Guid("7cea2648-a8fc-4cca-9730-85bf83ac437c"),
                            Image = "Assets/PaintingImg/7cea2648-a8fc-4cca-9730-85bf83ac437c.jpg",
                            Name = "Процедура",
                            PainterId = new Guid("bb57c88c-b1e3-43a4-825a-ac289e85cfb4"),
                            Price = 20000.0,
                            Title = "Цветная литография (40х60)"
                        });
                });

            modelBuilder.Entity("InkHouse.Models.Painter", b =>
                {
                    b.HasOne("InkHouse.Models.Country", "Country")
                        .WithMany("Painters")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("InkHouse.Models.Painting", b =>
                {
                    b.HasOne("InkHouse.Models.Painter", "Painter")
                        .WithMany("Paintings")
                        .HasForeignKey("PainterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Painter");
                });

            modelBuilder.Entity("InkHouse.Models.Country", b =>
                {
                    b.Navigation("Painters");
                });

            modelBuilder.Entity("InkHouse.Models.Painter", b =>
                {
                    b.Navigation("Paintings");
                });
#pragma warning restore 612, 618
        }
    }
}
